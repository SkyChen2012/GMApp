/* soapStub.h
   Generated by gSOAP 2.8.15 from soapmsg.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under ONE of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"
#if GSOAP_VERSION != 20815
# error "GSOAP VERSION MISMATCH IN GENERATED CODE: PLEASE REINSTALL PACKAGE"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_ns__MsgDataPointer
#define SOAP_TYPE_ns__MsgDataPointer (7)
/* Base64 schema type: */
struct ns__MsgDataPointer
{
	unsigned char *__ptr;
	int __size;
};
#endif

#ifndef SOAP_TYPE_stMsg
#define SOAP_TYPE_stMsg (11)
/* stMsg */
struct stMsg
{
	unsigned long function;	/* required element of type xsd:unsignedLong */
	struct ns__MsgDataPointer data;	/* required element of type ns:MsgDataPointer */
	int len;	/* required element of type xsd:int */
	unsigned long ip;	/* required element of type xsd:unsignedLong */
};
#endif

#ifndef SOAP_TYPE_ns__SendMsgResponse
#define SOAP_TYPE_ns__SendMsgResponse (16)
/* ns:SendMsgResponse */
struct ns__SendMsgResponse
{
	struct stMsg *out;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type stMsg */
};
#endif

#ifndef SOAP_TYPE_ns__SendMsg
#define SOAP_TYPE_ns__SendMsg (17)
/* ns:SendMsg */
struct ns__SendMsg
{
	struct stMsg in;	/* required element of type stMsg */
};
#endif

#ifndef SOAP_TYPE_ns__StrPointer
#define SOAP_TYPE_ns__StrPointer (18)
/* Base64 schema type: */
struct ns__StrPointer
{
	unsigned char *__ptr;
	int __size;
};
#endif

#ifndef SOAP_TYPE_stStrList
#define SOAP_TYPE_stStrList (19)
/* SOAP encoded array of ns:StrPointer schema type: */
struct stStrList
{
	struct ns__StrPointer *__ptr;
	int __size;
};
#endif

#ifndef SOAP_TYPE_ns__ATTReflashResponse
#define SOAP_TYPE_ns__ATTReflashResponse (22)
/* ns:ATTReflashResponse */
struct ns__ATTReflashResponse
{
	struct ns__StrPointer *TraceStr;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns:StrPointer */
};
#endif

#ifndef SOAP_TYPE_ns__ATTReflash
#define SOAP_TYPE_ns__ATTReflash (23)
/* ns:ATTReflash */
struct ns__ATTReflash
{
	unsigned int ID;	/* required element of type xsd:unsignedInt */
	unsigned int IP;	/* required element of type xsd:unsignedInt */
	unsigned int Port;	/* required element of type xsd:unsignedInt */
	struct ns__StrPointer TraceName;	/* required element of type ns:StrPointer */
};
#endif

#ifndef SOAP_TYPE_ns__ATTGetSessionIDResponse
#define SOAP_TYPE_ns__ATTGetSessionIDResponse (26)
/* ns:ATTGetSessionIDResponse */
struct ns__ATTGetSessionIDResponse
{
	unsigned int *pID;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:unsignedInt */
};
#endif

#ifndef SOAP_TYPE_ns__ATTGetSessionID
#define SOAP_TYPE_ns__ATTGetSessionID (27)
/* ns:ATTGetSessionID */
struct ns__ATTGetSessionID
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns__ATTGetTraceNameResponse
#define SOAP_TYPE_ns__ATTGetTraceNameResponse (30)
/* ns:ATTGetTraceNameResponse */
struct ns__ATTGetTraceNameResponse
{
	struct stStrList *out;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfStrPointer */
};
#endif

#ifndef SOAP_TYPE_ns__ATTGetTraceName
#define SOAP_TYPE_ns__ATTGetTraceName (31)
/* ns:ATTGetTraceName */
struct ns__ATTGetTraceName
{
	unsigned int IP;	/* required element of type xsd:unsignedInt */
	unsigned int Port;	/* required element of type xsd:unsignedInt */
};
#endif

#ifndef SOAP_TYPE_ns__ATTGetAnalyseNameResponse
#define SOAP_TYPE_ns__ATTGetAnalyseNameResponse (33)
/* ns:ATTGetAnalyseNameResponse */
struct ns__ATTGetAnalyseNameResponse
{
	struct stStrList *out;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfStrPointer */
};
#endif

#ifndef SOAP_TYPE_ns__ATTGetAnalyseName
#define SOAP_TYPE_ns__ATTGetAnalyseName (34)
/* ns:ATTGetAnalyseName */
struct ns__ATTGetAnalyseName
{
	unsigned int IP;	/* required element of type xsd:unsignedInt */
	unsigned int Port;	/* required element of type xsd:unsignedInt */
};
#endif

#ifndef SOAP_TYPE_ns__ATTGetAnalyseResponse
#define SOAP_TYPE_ns__ATTGetAnalyseResponse (36)
/* ns:ATTGetAnalyseResponse */
struct ns__ATTGetAnalyseResponse
{
	struct ns__StrPointer *AnalyseStr;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns:StrPointer */
};
#endif

#ifndef SOAP_TYPE_ns__ATTGetAnalyse
#define SOAP_TYPE_ns__ATTGetAnalyse (37)
/* ns:ATTGetAnalyse */
struct ns__ATTGetAnalyse
{
	unsigned int IP;	/* required element of type xsd:unsignedInt */
	unsigned int Port;	/* required element of type xsd:unsignedInt */
	struct ns__StrPointer AnalyseName;	/* required element of type ns:StrPointer */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (38)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (39)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (41)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (44)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (45)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Server-Side Operations                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 ns__SendMsg(struct soap*, struct stMsg in, struct stMsg *out);

SOAP_FMAC5 int SOAP_FMAC6 ns__ATTReflash(struct soap*, unsigned int ID, unsigned int IP, unsigned int Port, struct ns__StrPointer TraceName, struct ns__StrPointer *TraceStr);

SOAP_FMAC5 int SOAP_FMAC6 ns__ATTGetSessionID(struct soap*, unsigned int *pID);

SOAP_FMAC5 int SOAP_FMAC6 ns__ATTGetTraceName(struct soap*, unsigned int IP, unsigned int Port, struct stStrList *out);

SOAP_FMAC5 int SOAP_FMAC6 ns__ATTGetAnalyseName(struct soap*, unsigned int IP, unsigned int Port, struct stStrList *out);

SOAP_FMAC5 int SOAP_FMAC6 ns__ATTGetAnalyse(struct soap*, unsigned int IP, unsigned int Port, struct ns__StrPointer AnalyseName, struct ns__StrPointer *AnalyseStr);

/******************************************************************************\
 *                                                                            *
 * Server-Side Skeletons to Invoke Service Operations                         *
 *                                                                            *
\******************************************************************************/

SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__SendMsg(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__ATTReflash(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__ATTGetSessionID(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__ATTGetTraceName(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__ATTGetAnalyseName(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__ATTGetAnalyse(struct soap*);

/******************************************************************************\
 *                                                                            *
 * Client-Side Call Stubs                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__SendMsg(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct stMsg in, struct stMsg *out);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__ATTReflash(struct soap *soap, const char *soap_endpoint, const char *soap_action, unsigned int ID, unsigned int IP, unsigned int Port, struct ns__StrPointer TraceName, struct ns__StrPointer *TraceStr);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__ATTGetSessionID(struct soap *soap, const char *soap_endpoint, const char *soap_action, unsigned int *pID);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__ATTGetTraceName(struct soap *soap, const char *soap_endpoint, const char *soap_action, unsigned int IP, unsigned int Port, struct stStrList *out);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__ATTGetAnalyseName(struct soap *soap, const char *soap_endpoint, const char *soap_action, unsigned int IP, unsigned int Port, struct stStrList *out);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__ATTGetAnalyse(struct soap *soap, const char *soap_endpoint, const char *soap_action, unsigned int IP, unsigned int Port, struct ns__StrPointer AnalyseName, struct ns__StrPointer *AnalyseStr);

#ifdef __cplusplus
}
#endif

#endif

/* End of soapStub.h */
